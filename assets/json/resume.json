{"basics":{"name":"Joshua Rothe","label":"FPGA Engineer","image":"prof_pic.jpg","email":"joshrothe@gmail.com","url":"https://portfolio.rothellc.com/","summary":"Senior engineer at Lockheed Martin with a M.S. in Electrical Engineering from Johns Hopkins University. Specializes in FPGA firmware design with experience in electrical and mechanical hardware as well as software development. Proficient in Verilog, SystemVerilog, VHDL, and various simulation and software tools.","location":{"city":"Denver","countryCode":"US","region":"Colorado"},"profiles":[{"network":"LinkedIn","username":"joshua-rothe-22b18827","url":"https://www.linkedin.com/in/joshua-rothe-22b18827/"}]},"work":[{"name":"Lockheed Martin Space","position":"Software Engineer Sr","url":"https://www.lockheedmartin.com/en-us/index.html","startDate":"2023-08-01","endDate":"","summary":"Current role, working as an FPGA design engineer supporting a software simulation group.","highlights":["Designed and simulated FPGA firmware using SystemVerilog and VHDL. Simulated using UVM and self-checking test benches. Wrote software test scripts and documentation as part of integration.","Acted as lead for R&D efforts. Coordinated progress, schedule, and equipment cost with stakeholders and managers.","Designed circuitry using Cadence OrCAD and simulated in PSPICE to verify functionality. Prototyped and tested circuits by both breadboarding and soldering components onto protoboards.","Implemented a low-footprint Microk8s experiment (using Python) onto the LINUSS satellite to demonstrate functionality in a hardware-constrained environment. Automated deployment using YAML and bash scripts.","Technical POC/Functional Owner of RTOS lab test environment, responsible for hardware and software configuration as well as cybersecurity (STIG) compliance. Acted as property coordinator for lab team.","Lab hardware support, including wire harness design and hardware debugging/deployment."]},{"name":"Kratos Defense and Security Solutions, Inc.","position":"Firmware Engineer III","url":"https://www.kratosdefense.com/","startDate":"2022-05-01","endDate":"2023-07-01","summary":"Worked as an FPGA firmware engineer in support of DSP efforts.","highlights":["Developed FPGA firmware for Xilinx MPSoCs, tested with software (Python, C++) scripts on no-OS and PetaLinux builds. Debugged firmware using Vitis and JTAG connections as well as using software scripts on the board’s processor (for MPSoCs).","Implemented and tested C++/Python software and FPGA firmware on ICE FPGA cards using NeXT Midas."]},{"name":"Lockheed Martin Skunkworks/ADP","position":"Software Engineer","url":"https://www.lockheedmartin.com/en-us/index.html","startDate":"2018-11-01","endDate":"2022-04-01","summary":"Supported IRAD and other efforts with both design and ground/flight test support activities.","highlights":["Wrote SystemVerilog FPGA code for Xilinx MPSoC FPGAs in avionics systems, and Tcl scripts for automation.","Documented lab equipment assembly and generated drawings using Catia V5 and Solidworks.","Managed lab hardware procurement and inventory, up to $1.2 mil annually. Dealt directly with vendors.","Supported testbed operations (flight test, truck test) including building and troubleshooting test setups."]}],"education":[{"institution":"Johns Hopkins University","location":"Baltimore, MD, USA","url":"https://www.jhu.edu/","area":"Electrical Engineering","studyType":"MS","startDate":"2020-01-20","endDate":"2024-05-21","courses":["Digital Signal Processing","System-on-a-Chip FPGA Design Laboratory","FPGA Design Using VHDL","Machine Learning for Signal Processing","Embedded Systems Development Lab","Computer Architecture","UAV Systems and Control","Probability and Stocastic Processes for Engineers","UAV Systems and Control","Masters Thesis"]},{"institution":"California State University Northridge","location":"Northridge, CA, USA","url":"https://www.csun.edu/","area":"Electrical Engineering","studyType":"BS","startDate":"2012-08-27","endDate":"2017-05-19","courses":["Computing for Electrical Engineers","Digital Design with Verilog and SystemVerilog","FPGA Design Using VHDL","FPGA/ASIC Design and Optimization Using VHDL","Fundamental Control Systems","Introduction to Solid State Devices","Linear Systems I","Linear Systems II","Digital Electronics","Digital System Design with Programmable Logic","Electrical Engineering Fundamentals","Electromagnetic Fields and Waves","Electronics I","Electronics II","Engineering Economics and Analysis","Engineering Materials","Mathematical Models in EE","Num. Methods in Engineering","Probabilistic Systems in EE Design and Analysis","Theory of Digital Systems","Thermodynamics"]}],"certificates":[{"name":"Advanced Kubernetes Deployment Strategies and Networking","date":"April 3, 2025","issuer":"Coursera","url":"https://www.coursera.org/account/accomplishments/verify/8KX5LZPZSADJ","icon":"fa-solid fa-location-dot"},{"name":"UVM for Verification Part 3: Register Abstraction Layer (RAL)","date":"2024-01-01","issuer":"Udemy","url":"http://ude.my/UC-87e5d4ce-2709-4240-9af4-fc0bb45ad64e","icon":"fa-solid fa-tag"},{"name":"UVM for Verification Part 2: Projects","date":"2023-11-01","issuer":"Udemy","url":"https://ude.my/UC-58580020-b333-430d-bc68-7e707a3ff5c3","icon":"fa-solid fa-envelope"},{"name":"UVM for Verification Part 1: Fundamentals","date":"2023-10-01","issuer":"Udemy","url":"https://ude.my/UC-45360e86-eb70-47bf-a510-cd3d4ba38bb3","icon":"fa-solid fa-hashtag"}],"publications":[{"name":"Resource and Performance Improvements of Optimized Convolutional Neural Networks for FPGA Implementations of Automatic Modulation Recognition","publisher":"2025 59th Annual Conference on Information Sciences and Systems (CISS), 2025 ","releaseDate":"2025-04-04","url":"https://ieeexplore.ieee.org/document/10944746","summary":"Automatic Modulation Recognition (AMR), commonly found in software defined radios, relies on speed and accuracy to effectively interpret the modulation type of incoming signals. Convolutional Neural Networks (CNNs) are growing in popularity over traditional algorithms due to their excellent performance with classification-type problems – but these are typically resource intensive, and Radio Frequency (RF) receivers are typically part of a larger system that can benefit from less resources being tied to this classification task. Field Programmable Gate Array (FPGA) implementations provide better performance than CPU and GPU implementations in most cases, and the added benefit of these functions being off the processor allows the entire system to perform better. Since resource utilization is such a critical component of effective CNN implementation, and it is often inversely tied to performance, the effectiveness of various hardware optimization techniques as well as their effects on performance should be considered by the designer. This work evaluates the tradeoffs of various model optimizations and how they affect both implementation and performance, synthesizing the models using Xilinx’s quantization-aware FINN library. In this work, a methodology is presented for the generation of I and Q signals for CNN model training and evaluation, and the performance and hardware utilization benchmarks are evaluated to determine both design considerations and effective approaches for optimizing these models for real-world implementation."},{"name":"Quantization and Pruning of Convolutional Neural Networks for Efficient FPGA Implementation of Digital Modulation Detection Firmware","publisher":"Johns Hopkins University","releaseDate":"2024-07-29","url":"https://jscholarship.library.jhu.edu/handle/1774.2/69928","summary":"Automatic modulation detection is an important function of communications systems. Commonly found in software defined radios, it enables radio receivers to interpret multiple and potentially changing modulation types without needing manual input from the user. Due to vastly increasing performance, many modern systems are moving away from the traditional two-stage process of feature extraction and classification; instead, a neural-network based system (also known as deep learning) is being utilized with increased speed and virtually no loss in accuracy. These implementations, when placed on hardware or on a Field Programmable Gate Array (FPGA), provide the fastest performance; but until recently the barrier of entry has been the size of the neural networks and the infeasible amount of resources they would need to occupy on the FPGA fabric. This thesis explores the effects of both quantization and pruning on convolutional neural network models of various sizes while maintaining high classification accuracy for the digitally modulated signals generated. In this thesis, a framework is proposed for the generation of the signals, models, and hardware estimation to serve as a guide for efficient deep learning implementations of models intended to fit on hardware with limited resources. The results demonstrate tradeoffs and design considerations that balance performance and implementation size for engineers aiming to implement a deep learning-based automatic modulation detection scheme on FPGAs."}],"projects":[{"name":"OpenCV Facial Recognition Lock","summary":"System with SMS alerts and server logging for unauthorized entry attempts.","highlights":["OpenCV","Python"],"startDate":"2023-01-01","endDate":"2023-05-01","url":"https://github.com/rothej/jh_facial_recog_lock"},{"name":"Implementing DDR2 Cache Memory","summary":"Implementing DDR2 Cache Memory using the Xilinx Memory Interface Generator on a pipelined MIPS processor.","highlights":["Xilinx Vivado","Memory Interface Generator","DDR2"],"startDate":"2022-01-01","endDate":"2022-05-01","url":"https://portfolio.rothellc.com/projects/implementing_ddr2_cache_memory/"},{"name":"Detecting COVID-19 from Chest X-Rays","summary":"Using machine learning algorithms to detect COVID-19 and other respiratory illness using radiographic images.","highlights":["Matlab","Machine Learning"],"startDate":"2021-08-01","endDate":"2021-12-01","url":"https://portfolio.rothellc.com//projects/detecting_covid-19_from_chest_x-rays/"}]}